name: "CIFAR10_quick"
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.017
    mean_value: 104
    mean_value: 117
    mean_value: 123
  }
  data_param {
    source: "./examples/cifar10/cifar10_train_lmdb"
    batch_size: 10
    backend: LMDB
  }
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.017
    mean_value: 104
    mean_value: 117
    mean_value: 123
  }
  data_param {
    source: "./examples/cifar10/cifar10_test_lmdb"
    batch_size: 10
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn1"
  type: "BatchNorm"
  bottom: "conv1"
  top: "conv1" 
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1_scale"
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1_scale"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
    bottom: "conv1_scale"
    bottom: "conv2"
    top: "ele_sum"
    name: "ele_sum"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "ele_sum"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 0
  } 
  convolution_param {
    num_output: 64
    pad: 1 
    stride: 1 
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  name: "bn4"
  type: "BatchNorm"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "scale4"
  type: "Scale"
  bottom: "conv4"
  top: "conv_scale4"
  scale_param {
    bias_term: false
  }
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv_scale4"
  top: "pool4"
  pooling_param {
    pool: AVE
    global_pooling: true
    engine: CAFFE
  }
}
layer {
  name: "ip0"
  type: "InnerProduct"
  bottom: "pool4"
  top: "ip0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "scale5"
  type: "Scale"
  bottom: "conv_scale4"
  bottom: "ip0"
  top: "conv_scale5"
  scale_param {
    bias_term: false
    axis: 0
  }
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv_scale5"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn7"
  type: "BatchNorm"
  bottom: "ip1"
  top: "ip1_bn"
}
layer {
  name: "scale7"
  type: "Scale"
  bottom: "ip1_bn"
  top: "ip1_scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "ip1_scale"
  top: "drop7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "drop7"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn8"
  type: "BatchNorm"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "scale8"
  type: "Scale"
  bottom: "ip2"
  top: "ip2_scale"
  scale_param {
    bias_term: false
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2_scale"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2_scale"
  bottom: "label"
  top: "loss"
}
